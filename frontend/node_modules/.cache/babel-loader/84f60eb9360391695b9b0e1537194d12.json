{"ast":null,"code":"import { CART_ADD_ITEM } from \"../constants\";\nexport const cartReducer = (state = {\n  carItems: []\n}, action) => {\n  var _state$carItems;\n\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload;\n      const existItem = (_state$carItems = state.carItems) === null || _state$carItems === void 0 ? void 0 : _state$carItems.find(x => x.product === item.product);\n\n      if (existItem) {\n        return { ...state,\n          carItems: state.carItems.map(x => x.product === existItem.product ? item : x)\n        };\n      } else {\n        return { ...state,\n          carItems: [state.carItems, item]\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/sanbl/Desktop/shopperfy/frontend/src/redux/reducers/cartReducer.js"],"names":["CART_ADD_ITEM","cartReducer","state","carItems","action","type","item","payload","existItem","find","x","product","map"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAE;AAAEC,EAAAA,QAAQ,EAAG;AAAb,CAAR,EAA0BC,MAA1B,KAAqC;AAAA;;AAC9D,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKL,aAAL;AACA,YAAMM,IAAI,GAAGF,MAAM,CAACG,OAApB;AAEA,YAAMC,SAAS,sBAAGN,KAAK,CAACC,QAAT,oDAAG,gBAAgBM,IAAhB,CAAqBC,CAAC,IAAGA,CAAC,CAACC,OAAF,KAAcL,IAAI,CAACK,OAA5C,CAAlB;;AAEA,UAAGH,SAAH,EAAc;AACZ,eAAO,EACL,GAAGN,KADE;AAELC,UAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeS,GAAf,CAAmBF,CAAC,IAAEA,CAAC,CAACC,OAAF,KAAcH,SAAS,CAACG,OAAxB,GAAkCL,IAAlC,GAAyCI,CAA/D;AAFL,SAAP;AAID,OALD,MAKO;AAEP,eAAO,EACL,GAAGR,KADE;AAELC,UAAAA,QAAQ,EAAE,CAACD,KAAK,CAACC,QAAP,EAAgBG,IAAhB;AAFL,SAAP;AAIC;;AAEH;AACA,aAAOJ,KAAP;AApBA;AAuBD,CAxBM","sourcesContent":["import { CART_ADD_ITEM } from \"../constants\"\r\n\r\nexport const cartReducer = (state ={ carItems : []}, action) => {\r\n  switch(action.type){\r\n    case CART_ADD_ITEM:\r\n    const item = action.payload;\r\n\r\n    const existItem = state.carItems?.find(x =>x.product === item.product)\r\n\r\n    if(existItem) {\r\n      return {\r\n        ...state,\r\n        carItems: state.carItems.map(x=>x.product === existItem.product ? item : x)\r\n      }\r\n    } else {\r\n\r\n    return {\r\n      ...state,\r\n      carItems: [state.carItems,item]\r\n    }\r\n    }\r\n    \r\n  default:\r\n  return state;\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}